<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <link href="public/assets/stylesheet.css" rel="stylesheet" type="text/css" />
  <title>Web chat</title>
</head>
<body>
  <div class="CenterContainer">
    <h1 class="titleWebChat">Bem vindo ao web chat!</h1>
    <form action="submit" class="formContainer">
      <div class="containerUsersInfo">
        <div class="containerInputAndBtnSave">
          <input id="inputUser" data-testid="nickname-box" class="inputNameUser"/>
          <button
            type="button"
            id="sendButtonUserName"
            data-testid="nickname-button"
            class="btnSaveName"
          >
            Salvar
          </button>
        </div>
        <div class="containerUsersOnline">
          <h3 class="titleUsersOnline">Usu√°rios Online</h3>
          <div class=" ">
            <p id="userNames" data-testid="online-user" class="online-user styleUsersOnline"></p>
            <div id="divUserNames" class="styleUsersOnline"></div>
          </div>
        </div>
      </div>
      <div class="containerMessages">
        <div class="historyMessages">
          <div>
            <% history.forEach((message) => { %>
              <div data-testid="message">
                <%= `${message.timestamp} - ${message.nickname}: ${message.message}` %>
              </div>
              <% }) %>
            <div id="messages" class="actualMessages"></div>
          </div>
        </div>
        <div>
          <input id="inputMessage" data-testid="message-box" class="inputMessages"/>
          <button class="btnSendMessage" type="submit" id="pingButton" data-testid="send-button">Enviar</button>
        </div>
      </div>
    </form>
  </div>
  <script>
    const socket = io();
    const sendButton = document.querySelector('#pingButton');
    const inputUser = document.querySelector('#inputUser');
    const inputMessage = document.querySelector('#inputMessage');
    const formMessages = document.querySelector('form');
    const userNames = document.querySelector('#userNames');
    const sendButtonUserName = document.querySelector('#sendButtonUserName');
    const divUserNames = document.querySelector('#divUserNames');
    const containerMesages = document.querySelector('.historyMessages')
    const actualMessages = document.querySelector('.actualMessages')
    const arrayUserNames = [];
    containerMesages.scrollTop = containerMesages.scrollHeight;


    const createNewUser = (nickname) => {
      const user = Object.values(nickname);
      divUserNames.innerText = '';
      user.forEach((name) => {
        if(name !== userNames.innerText) {
          const span = document.createElement('p');
          span.setAttribute('data-testid', 'online-user');
          span.innerText = name;
          divUserNames.appendChild(span);
        };
      });
    };

    sendButtonUserName.addEventListener('click', (e) => {
      if(!inputUser.value) return;
      userNames.innerText = inputUser.value;
      const sessionName = localStorage.getItem('firstName');
      sessionStorage.setItem('firstName', inputUser.value);
      sessionStorage.setItem('users', JSON.stringify({
        name: inputUser.value,
        id: socket.id.substr(0, 16),
      }));
      socket.emit('attNickName', inputUser.value);
      inputUser.value = ''
    });

    formMessages.addEventListener('submit', (e) => {
      e.preventDefault();
      const sessionName = sessionStorage.getItem('firstName');
      socket.emit('message', { 
        chatMessage: inputMessage.value,
        nickname: sessionName ? sessionName : socket.id.substr(0, 16)
      });
      
      socket.emit('onlineUser', {
        nickname: sessionName ? sessionName : socket.id.substr(0, 16)
      })

      inputMessage.value = '';
      containerMesages.scrollTop = containerMesages.scrollHeight;

      return false;
    });

    const createMessage = (message) => {
      const ul = document.querySelector('#messages');
      const li = document.createElement('li');
      li.innerText = message;
      li.setAttribute('data-testid', 'message');
      ul.appendChild(li);
    };
    
    const attNickName = () => {
      const newName = inputUser.value;
      userNames.innerText = newName;
    }

    socket.on('message', (message) => createMessage(message));

    socket.on('newConnection', (message) => {
      createMessage(message);
    });

    socket.on('firstNameUser', (user) => {
      const nickname = user;
      userNames.innerText = nickname;
    });

    socket.on('onlineUser', (nickname) => {
      createNewUser(nickname);
    });

  </script>
</body>
</html>